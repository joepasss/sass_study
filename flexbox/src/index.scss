/* Flex Continer => Parent */
ul {
  background-color: lightslategray;
  padding: 20px;
  // height: 600px;

  /* display: inline-flex; */ /* it acts as though it is inline, but for a flex container */

  /* Flex Container Properties */
  display: flex;
  flex-wrap: wrap;

  /* Flex Items => Children */
  li {
    /* display: inline-block; */
    list-style: none;
    color: white;
    background-color: #20b2aa;
    margin: 20px;
    padding: 10px;
    width: 100px;
    font-size: 20px;
    text-align: center;

    /*-*-*-*-*-*-*-*-*-*-----(1)ORDER-----*-*-*-*-*-*-*-*-*-*/

    /* When the flex direction is Row/Column */
    // if order value is 0 it means default value

    // // ordering from bottom(end)
    // &:nth-child(3) {
    //   order: 1;
    // }

    // &:nth-child(1) {
    //   order: 3;
    // }

    // &:nth-child(6) {
    //   order: 2;
    // }

    // &:nth-child(5) {
    //   // last
    //   order: 5;
    // }

    // // ordering from top(start)
    // &:nth-child(8) {
    //   //first
    //   order: -1;
    // }

    // &:nth-child(2) {
    //   order: -2;
    // }

    /*-*-*-*-*-*-*-*-*-*-----(2)Flex GROW-----*-*-*-*-*-*-*-*-*-*/
    /* Flex Grow (Default => 0 => off) */
    // &:first-child {
    //   flex-grow: 1;
    // }
    // &:nth-child(2) {
    //   flex-grow: 2;
    // }

    /*-*-*-*-*-*-*-*-*-*-----(3)Flex SHRINK-----*-*-*-*-*-*-*-*-*-*/
    /* Flex Shrink (Default => 1 => on) */

    // &:first-child {
    //   flex-shrink: 0;
    // }

    /*-*-*-*-*-*-*-*-*-*-----(4)Flex BASIS-----*-*-*-*-*-*-*-*-*-*/
    /* FLEX BASIS (Default => Auto) */
    // &:first-child {
    //   flex-basis: 25rem;
    // }

    // flex-grow -> shrink -> flex-basis 순서로 responsive

    // &:nth-child(2) {
    //   flex-basis: 10rem;
    // }

    // if use with flex grow flex grow part is first shrink part (more responsive)
  }
}
